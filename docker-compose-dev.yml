# docker-compose.dev.yml (Aligned with DevLake docs, focusing on backend build)
version: "3.8" # Version is fine, even if obsolete warning appears
services:
  mysql:
    image: mysql:8
    volumes:
      - mysql-storage:/var/lib/mysql
    restart: always
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: lake
      MYSQL_USER: merico
      MYSQL_PASSWORD: merico
      TZ: UTC
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_bin --skip-log-bin
    networks:
      - devlake-net

  grafana:
    image: grafana/grafana:9.5.5
    ports:
      - 3002:3000
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
      - GF_SERVER_ROOT_URL=http://localhost:3002
      - TZ=UTC
    restart: always
    depends_on:
      - mysql
    networks:
      - devlake-net

  devlake: # Backend
    build:
      context: backend
      args:
        HTTPS_PROXY: "${HTTPS_PROXY}"
        GOPROXY: "${GOPROXY}"
    volumes:
      - ./backend:/app # Mount source code as per docs
      - go-modules:/go/pkg/mod
      - devlake-log:/app/logs
    ports:
      - 8080:8080
    restart: on-failure
    env_file:
      - ./.env
    environment:
      - DB_URL=mysql://merico:merico@mysql:3306/lake?charset=utf8mb4&parseTime=True&loc=UTC
      - LOGGING_DIR=/app/logs
      - GIN_MODE=debug
      - TZ=UTC
    depends_on:
      - mysql
    networks:
      - devlake-net
    command: tail -f /dev/null # Keep alive for exec + 'make run' / 'air'

  config-ui: # Frontend
    # Use the build context as per DevLake's original docker-compose-dev.yml
    # The Dockerfile in config-ui/ SHOULD produce an image capable of dev
    build:
      context: "config-ui"
    volumes:
      - ./config-ui:/app # Mount source code as per docs
      - /app/node_modules # Isolate node_modules
    ports:
      - 4000:4000 # Assuming Vite is configured for port 4000
    restart: on-failure
    env_file:
      - ./.env
    environment:
      - DEVLAKE_ENDPOINT=http://localhost:8080 # For browser access to API
      - GRAFANA_ENDPOINT=http://localhost:3002 # For browser access to Grafana
      - NODE_ENV=development
      - TZ=UTC
    depends_on:
      - devlake
    networks:
      - devlake-net
    # Command to run dev server - will be executed AFTER image is built
    # and AFTER volumes are mounted.
    command: sh -c "yarn install && yarn start"

volumes:
  mysql-storage:
  grafana-storage:
  devlake-log:
  go-modules:

networks:
  devlake-net: